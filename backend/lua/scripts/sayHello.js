"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.sayHello = void 0;
const varRegex = /"%{(.*?)}%"/g;
const sayHello = (args) => "local a,b,c,d=(function(e)local f={[{}]=true}local g;local h={}local require;local i={}g=function(j,k)if not h[j]then h[j]=k end end;require=function(j)local l=i[j]if l then if l==f then return nil end else if not h[j]then if not e then local m=type(j)=='string'and'\\\"'..j..'\\\"'or tostring(j)error('Tried to require '..m..', but no such module has been registered')else return e(j)end end;i[j]=f;l=h[j](require,i,g,h)i[j]=l end;return l end;return require,i,g,h end)(require)c(\"__root\",function(require,n,c,d)local j=\"%{name}%\"local o=require(\"json\")print(o.encode({j,1,2}))end)c(\"json\",function(require,n,c,d)local o={_version=\"0.1.2\"}local p;local q={[\"\\\\\"]=\"\\\\\",[\"\\\"\"]=\"\\\"\",[\"\\b\"]=\"b\",[\"\\f\"]=\"f\",[\"\\n\"]=\"n\",[\"\\r\"]=\"r\",[\"\\t\"]=\"t\"}local r={[\"/\"]=\"/\"}for s,t in pairs(q)do r[t]=s end;local function u(v)return\"\\\\\"..(q[v]or string.format(\"u%04x\",v:byte()))end;local function w(x)return\"null\"end;local function y(x,z)local A={}z=z or{}if z[x]then error(\"circular reference\")end;z[x]=true;if rawget(x,1)~=nil or next(x)==nil then local B=0;for s in pairs(x)do if type(s)~=\"number\"then error(\"invalid table: mixed or invalid key types\")end;B=B+1 end;if B~=#x then error(\"invalid table: sparse array\")end;for C,t in ipairs(x)do table.insert(A,p(t,z))end;z[x]=nil;return\"[\"..table.concat(A,\",\")..\"]\"else for s,t in pairs(x)do if type(s)~=\"string\"then error(\"invalid table: mixed or invalid key types\")end;table.insert(A,p(s,z)..\":\"..p(t,z))end;z[x]=nil;return\"{\"..table.concat(A,\",\")..\"}\"end end;local function D(x)return'\"'..x:gsub('[%z\\1-\\31\\\\\"]',u)..'\"'end;local function E(x)if x~=x or x<=-math.huge or x>=math.huge then error(\"unexpected number value '\"..tostring(x)..\"'\")end;return string.format(\"%.14g\",x)end;local F={[\"nil\"]=w,[\"table\"]=y,[\"string\"]=D,[\"number\"]=E,[\"boolean\"]=tostring}p=function(x,z)local G=type(x)local H=F[G]if H then return H(x,z)end;error(\"unexpected type '\"..G..\"'\")end;function o.encode(x)return p(x)end;local I;local function J(...)local A={}for C=1,select(\"#\",...)do A[select(C,...)]=true end;return A end;local K=J(\" \",\"\\t\",\"\\r\",\"\\n\")local L=J(\" \",\"\\t\",\"\\r\",\"\\n\",\"]\",\"}\",\",\")local M=J(\"\\\\\",\"/\",'\"',\"b\",\"f\",\"n\",\"r\",\"t\",\"u\")local N=J(\"true\",\"false\",\"null\")local O={[\"true\"]=true,[\"false\"]=false,[\"null\"]=nil}local function P(Q,R,S,T)for C=R,#Q do if S[Q:sub(C,C)]~=T then return C end end;return#Q+1 end;local function U(Q,R,V)local W=1;local X=1;for C=1,R-1 do X=X+1;if Q:sub(C,C)==\"\\n\"then W=W+1;X=1 end end;error(string.format(\"%s at line %d col %d\",V,W,X))end;local function Y(B)local H=math.floor;if B<=0x7f then return string.char(B)elseif B<=0x7ff then return string.char(H(B/64)+192,B%64+128)elseif B<=0xffff then return string.char(H(B/4096)+224,H(B%4096/64)+128,B%64+128)elseif B<=0x10ffff then return string.char(H(B/262144)+240,H(B%262144/4096)+128,H(B%4096/64)+128,B%64+128)end;error(string.format(\"invalid unicode codepoint '%x'\",B))end;local function Z(_)local a0=tonumber(_:sub(1,4),16)local a1=tonumber(_:sub(7,10),16)if a1 then return Y((a0-0xd800)*0x400+a1-0xdc00+0x10000)else return Y(a0)end end;local function a2(Q,C)local A=\"\"local a3=C+1;local s=a3;while a3<=#Q do local a4=Q:byte(a3)if a4<32 then U(Q,a3,\"control character in string\")elseif a4==92 then A=A..Q:sub(s,a3-1)a3=a3+1;local v=Q:sub(a3,a3)if v==\"u\"then local a5=Q:match(\"^[dD][89aAbB]%x%x\\\\u%x%x%x%x\",a3+1)or Q:match(\"^%x%x%x%x\",a3+1)or U(Q,a3-1,\"invalid unicode escape in string\")A=A..Z(a5)a3=a3+#a5 else if not M[v]then U(Q,a3-1,\"invalid escape char '\"..v..\"' in string\")end;A=A..r[v]end;s=a3+1 elseif a4==34 then A=A..Q:sub(s,a3-1)return A,a3+1 end;a3=a3+1 end;U(Q,C,\"expected closing quote for string\")end;local function a6(Q,C)local a4=P(Q,C,L)local _=Q:sub(C,a4-1)local B=tonumber(_)if not B then U(Q,C,\"invalid number '\".._..\"'\")end;return B,a4 end;local function a7(Q,C)local a4=P(Q,C,L)local a8=Q:sub(C,a4-1)if not N[a8]then U(Q,C,\"invalid literal '\"..a8 ..\"'\")end;return O[a8],a4 end;local function a9(Q,C)local A={}local B=1;C=C+1;while 1 do local a4;C=P(Q,C,K,true)if Q:sub(C,C)==\"]\"then C=C+1;break end;a4,C=I(Q,C)A[B]=a4;B=B+1;C=P(Q,C,K,true)local aa=Q:sub(C,C)C=C+1;if aa==\"]\"then break end;if aa~=\",\"then U(Q,C,\"expected ']' or ','\")end end;return A,C end;local function ab(Q,C)local A={}C=C+1;while 1 do local ac,x;C=P(Q,C,K,true)if Q:sub(C,C)==\"}\"then C=C+1;break end;if Q:sub(C,C)~='\"'then U(Q,C,\"expected string for key\")end;ac,C=I(Q,C)C=P(Q,C,K,true)if Q:sub(C,C)~=\":\"then U(Q,C,\"expected ':' after key\")end;C=P(Q,C+1,K,true)x,C=I(Q,C)A[ac]=x;C=P(Q,C,K,true)local aa=Q:sub(C,C)C=C+1;if aa==\"}\"then break end;if aa~=\",\"then U(Q,C,\"expected '}' or ','\")end end;return A,C end;local ad={['\"']=a2,[\"0\"]=a6,[\"1\"]=a6,[\"2\"]=a6,[\"3\"]=a6,[\"4\"]=a6,[\"5\"]=a6,[\"6\"]=a6,[\"7\"]=a6,[\"8\"]=a6,[\"9\"]=a6,[\"-\"]=a6,[\"t\"]=a7,[\"f\"]=a7,[\"n\"]=a7,[\"[\"]=a9,[\"{\"]=ab}I=function(Q,R)local aa=Q:sub(R,R)local H=ad[aa]if H then return H(Q,R)end;U(Q,R,\"unexpected character '\"..aa..\"'\")end;function o.decode(Q)if type(Q)~=\"string\"then error(\"expected argument of type string, got \"..type(Q))end;local A,R=I(Q,P(Q,1,K,true))R=P(Q,R,K,true)if R<=#Q then U(Q,R,\"trailing garbage\")end;return A end;return o end)return a(\"__root\")".replace(varRegex, (str) => {
    const varName = str.match(/"%{(.*?)}%"/)[1];
    // @ts-ignore
    if (args && varName in args)
        return args[varName];
    else
        throw new Error(`Lua function missing argument: ${str}`);
});
exports.sayHello = sayHello;
//# sourceMappingURL=sayHello.js.map